

	#Pour des raisons évidentes de sécurité les informations sensibles ont été remplacées par "*****".

	Architecture projet:

		Languages utilisés : 
		
			- html 
			- css 
			- javascript
				- SQL
			
		Api utilisées :
		
			- https://formsubmit.co/ (Envois des données de formulaires vers le mail : groupecfr3@gmail.com)
				pages concernées: contact.html, formation_contact.html
		
		Architecture php:
		
			Chaque page est sous le format suivant: head => navbar => content => footer
			Les blocs navbar & footer sont communs à chaque pages et sont éditable dans leur fichier php séparé (navbar.php, footer.php)
			Les tags css globaux ont été évités autant que possible. Ceux utilisés sont tous déclarés dans le fichier ./css/global.css
			
			head: 
				- Link css globaux à la suite du commentaire <!-- global links  -->
				- Link css liés à la page à la suite du commentaire <!-- page related links  -->
				- Les link javascript se situe dans le bloc de l'élément concerné (voir plus bas)
				
			body:
				- Chaque bloc de contenu est enfermé par les tags de type suivants: 
					<!-- [element name] --> bloc html <!-- fin [element name] -->
				- Chaque bloc html a un fichier css attitré du même nom que le tag encadrant le bloc, précédé du nom de la page. 
					ex: accueil_carrousel.css définis l'élément <! carrousel --> de la page accueil.html
				- Si un bloc html contient du javascript, celui ci est déclaré au début du bloc.
				- Les blocs suivants utilisent une base de donnée SQL: partners_banner, feedbackBox, blog & formation_cards.
				
		
	Plateform d'hosting:

		https://www.o2switch.fr/
		Identifiant: *****
		Mail: *****
		Id Cpanel: *****
		Dossier du projet: public_html
		
	Accès GIT

		Git du projet déployé: https://github.com/CFR95/GroupeCFR-Production-Website
		
	Mise à jour du site depuis le GIT
		
		Deployer un changement:
			Push sur le git => cpanel => Git version control => GroupeCFR-Production-Website : Gérer => Pull or Deploy => Update from remote
			
		Changement de repo référence / En cas de problème de pull :
			- Cpanel => Gestionnaire de fichiers => Supprimer le contenu du dossier public_html
			- Cpanel => Git version control => Supprimer GroupeCFR-Production-Website => Créer => Copier le lien de clone de git 
				=> définir le path vers le dossier public_html => nommer le version control => Créer.
				
	Gestion de la base de données via le module phpMyAdmin de Cpanel : 

		La base de données de production utilisée par le site est *****. 
		
		Elle contient 5 tables indépendantes :
		
			- blog qui contient le contenu des articles de la page blog.php, 9 colonnes;
			- CFR_FEEDBACK qui contient les commentaires clients de la page accueil.php, 7 colonnes;
			- en-tete_liste_formation qui contient les titres des pages formation (formation_cards.php), et éventuellement un texte de description, 4 colonnes;
			- liste_formations qui contient les données des formations du Groupe CFR (formation_cards.php), 13 colonnes;
			- logo_partenaire_accueil qui contient les noms des logos de la bannière partenaire de la page accueil.php, 3 colonnes.
			
		Utilisateur avec droits d'accès en lecture seule sur cette base de données :
			
			Identifiant : *****. Identifiant et mot de passe sont stockés dans ***** pour accéder à la base de donnée depuis les pages php.
			
		La mise à jour de ces tables peut se faire en double cliquant directement sur le texte des enregistrements.
		La mise à jour de ces tables peut se faire aussi en cliquant directement sur "Insérer" via le module phpMyAdmin de Cpanel.
		
		La mise à jour de ces tables peut se faire aussi en important un fichier .csv via phpMyAdmin.
		Ce fichier doit contenir le même nombre de colonnes que la table qu'il concerne, et qui doivent être dans le même ordre que dans la table.
		
		Pour eviter les erreurs de format du fichier .csv, commencer par exporter la table à mettre à jour. Ajouter des lignes, ou modifier des lignes existantes, puis importer le fichier mis à jour.
		
		Exporter un fichier .csv :
		
			- Cliquer sur la table à exporter
			- Cliquer sur exporter
			- Méthode d'exportation personalisée
			- Format CSV for MS Excel
			- Sortie : jeu de caractères du fichier windows-1252. Ce paramètre permet d'afficher les caractères correctement accentués (é, à, î, etc...)
			- Cliquer sur exécuter 
			
			Remarque : il est possible de n'extraire q'une partie des lignes de la table en sélectionnant Lignes : décharger quelques lignes.
			Nombre de lignes définit le nombre de lignes à extraire et Ligne de début la ligne 0 de l'extraction.
			Ex : Nombre de ligne: 10 et Ligne de début: 4 permet d'extraire les lignes 5 à 14.
			
		Importer un fichier .csv :
		
			- Cliquer sur la table à mettre à jour
			- Cliquer sur importer
			- Sélectionner le fichier .csv à importer
			- Jeu de caractères du fichier : windows-1252 Ce paramètre permet d'afficher correctement les caractères accentués (é, à, î, etc...)
			- Mettre la ligne "Ignorer ce nombre de requêtes (pour SQL), à partir du début :" à 1 pour ne pas importer la ligne contenant les intitulés des colonnes ==> sinon erreur
			- Format: CSV
			- "Colonnes séparées par :" remplacer le symbole , (virgule) par ; (point virgule)
			- "Colonnes entourées par :" supprimer le symbole " et laisser vide
			- "Colonnes échappées avec :" supprimer le symbole " et laisser vide
			- Les colonne ID ou id_... s'incrémentent automatiquement si elles sont vides lors de l'importation du fichier .csv. Une ligne à ajouter doit donc contenir une case vide dans la colonne ID.
			Pour mettre à jour une ligne existante, ne pas modifier la colonne ID de cette ligne dans le fichier .csv 
			et cocher la case "Mettre à jour les données lorsque des clés dupliquées sont trouvées lors de l'importation" avant d'exécuter l'importation.
			Cocher également la case "Ne pas arrêter l'importation lors d'une erreur INSERT". 
			- Cliquer sur exécuter
			
			
		Dictionnaire de données : 
		
			*Table blog* (page blog.php)
				- id_blog : identifiant interne des enregistrements de la table;
				- date_blog : date de création/publication de l'article;
				- titre : titre principal de l'article;
				- lien_source : lien pointant vers la page d'accueil du site source de l'article;
				- texte_source : texte à afficher pour le lien vers le site source. Ex. : "travail-emploi.gouv" affiché sur le site pour le lien vers https://travail-emploi.gouv.fr/;
				- description_blog : court résumé de l'article;
				- lien_article : lien pointant vers la page de l'article;
				- photo_blog : nom complet de l'image d'illustration de l'article. Ex. : opco.png, chemin d'accès asset/blog_page (https://github.com/CFR95/GroupeCFR-Production-Website/tree/main/asset/blog_page);
				- alt_value : description textuelle de l'image photo_blog.
				
			*Table CFR_FEEDBACK* (page accueil.php)
				- ID : identifiant interne des enregistrements de la table;
				- NOM : prénom de l'auteur du témoignage
				- FORMATION : intitulé de la formation suivie;
				- TYPEFORMA : mode de formation : distanciel, présentiel, e-learning;
				- AVATAR : nom complet de l'image de l'avatar à utiliser. Ex. : cfr_profil_m1.svg, chemin d'accès asset/img (https://github.com/CFR95/GroupeCFR-Production-Website/tree/main/asset/img);
				- FEEDBACK : texte du témoignage;
				- ALT_VALUE : description textuelle de l'image d'avatar.
				
			*Table en_tete_liste_formation* (page formation_cards.php)
				- id_en_tete : identifiant interne des enregistrements de la table;
				- categorie : code de catégorie de formation utilisé par le site;
				- titre : texte du titre de la catégorie à afficher;
				- texte_descritpion (optionnel) : courte description de la formation.
				
			*Table liste_formations* (page formation_cards.php)
				- id_formation : identifiant interne des enregistrements de la table;
				- code_cfr : référence interne à CFR de la formation. Ce code est uniquement constitué de chiffre, ils complètent le code interne de type CFR-XXX;
				- categorie : code de catégorie de formation utilisé par le site;
				- intitule : intitulé de la formation;
				- presentiel (type tinyint) : dipsonibilité de ce mode de formation;
				- distanciel (type tinyint) : dipsonibilité de ce mode de formation;
				- e_learning (type tinyint) : dipsonibilité de ce mode de formation;
				- public_vise : texte décrivant le public visé par la formation;
				- pre_requis : texte décrivant les pré-requis pour cette formation;
				- financement : texte décrivant les modes de financement possibles pour cette formation;
				- objectifs : texte décrivant les objectifs de cette formation;
				- nom_photo : nom complet de l'image d'illustration de la formation, chemin d'accès asset/photo_cards (https://github.com/CFR95/GroupeCFR-Production-Website/tree/main/asset/photo_cards);
				- alt_value : description textuelle de l'image nom_photo.
				
				Remarque : les colonnes de type tinyint représentent le disponibilité d'un mode de formation. La valeur 0 signifie que ce mode est indisponible pour cette formation (présentiel, etc...).
				Toute autre valeur signifie que ce mode est disponible pour cette formation.
				
			*Table logo_partenaire_accueil* (page accueil.php)
				- id_logo : identifiant interne des enregistrements de la table;
				- nom_logo : nom complet de l'image utilisée pour le logo partenaire, chemin d'accès asset/logos (https://github.com/CFR95/GroupeCFR-Production-Website/tree/main/asset/logos);
				- alt_value : description textuelle de l'image nom_logo.